{"version":3,"sources":["server.js"],"names":["express","require","cors","bodyParser","dotenv","corsOptions","origin","app","use","json","limit","config","urlencoded","extended","db","mongoose","connect","url","useUnifiedTopology","then","log","err","process","exit","get","req","res","console","message","PORT","env","concat"],"mappings":"aAAA,IAAMA,QAAUC,QAAQ,WAClBC,KAAOD,QAAQ,QADfD,OAAUC,QAAQ,UAGlBE,WAAaF,QAAQ,eAFrBC,IAAOD,UACbA,QAAMG,sBASN,IAAIC,YAAc,CALlBJ,OAAQ,KAKRG,OAAIC,SACFC,IAAAA,IAAMJ,KAAEG,cADQE,IAAlBC,IAAAL,WAAAM,KAAA,CAAAC,MAAA,UAIAN,IAAAA,IAAOO,WAAPC,WAAA,CAAAF,MAAA,OAAAG,UAAA,KAEAN,IAAIC,IAAIL,QAAAA,QACRI,IAAIC,IAAIL,QAAAA,WAAWS,CAAXC,UAAsB,KAAgBA,IAAAA,GAAQZ,QAAE,gBAA1Ba,GAA9BC,SASGC,QAAQF,GAAGG,IAAK,CAPfT,iBAAI,EAERU,oBAAA,IACGC,KAAKnB,WAAqBa,QAAUO,IAAA,gCALT,MAgBrB,SAAAC,GATHP,QAAKb,IAAO,kCAAlBoB,GAWIC,QAAQC,SAHThB,IAPHiB,IAAA,IAQS,SAAAC,EAAAC,GACLC,EAAAA,KAAQP,CAARQ,QAAY,uCAWhB3B,QAAQ,2BAARA,CAAoCM,KAJpCA,QAAQ,6BAARA,CAA2BA,KACzBmB,QAAIjB,iCAAJiB,CAASnB,KAAEqB,QAAAA,2BAAAA,CAASrB,KAStB,IAAMsB,KAAOP,QAAQQ,IAAID,MAAQ,KANjC5B,IAAAA,OAAQ4B,KAAA,WAQNF,QAAQP,IAAR,6BAAAW,OAAyCF,KAAzC","file":"server.min.js","sourcesContent":["const express = require(\"express\");\nconst cors = require(\"cors\");\nconst dotenv = require(\"dotenv\");\nconst bodyParser = require(\"body-parser\");\nconst app = express();\n\nrequire(\"./app/socketServer\");\n// require(\"./app/walletavatar\")\n\n\n\nvar corsOptions = {\n  origin: \"*\"\n  \n};\ndotenv.config();\napp.use(cors(corsOptions));\napp.use(bodyParser.json({limit: '50mb'}));\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n// parse requests of content-type - application/json\napp.use(express.json());\n// mongoose.connect(\"mongodb://localhost/phantom-avatars\", { useNewUrlParser: true, useUnifiedTopology: true });\n// parse requests of content-type - application/x-www-form-urlencoded\napp.use(express.urlencoded({ extended: true }));\n\nconst db = require(\"./app/models\");\ndb.mongoose\n  .connect(db.url, {\n    useNewUrlParser: true,\n    useUnifiedTopology: true\n  })\n  .then(() => {\n    console.log(\"Connected to the database!\");\n  })\n  .catch(err => {\n    console.log(\"Cannot connect to the database!\", err);\n    process.exit();\n  });\n\n\n\n// simple route\napp.get(\"/\", (req, res) => {\n  res.json({ message: \"Welcome to bezkoder application.\" });\n});\n\nrequire(\"./app/routes/user.routes\")(app);\nrequire(\"./app/routes/ticket.routes\")(app);\nrequire(\"./app/routes/buyTickets.routes\")(app);\nrequire(\"./app/routes/chat.routes\")(app);\n\n// set port, listen for requests\nconst PORT = process.env.PORT || 3001;\napp.listen(PORT, () => {\n  console.log(`Server is running on port ${PORT}.`);\n});\n\n"]}